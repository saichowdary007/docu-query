[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docuquery-ai"
version = "0.1.1"
description = "A powerful document query system using RAG and LLM technologies"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    {name = "DocuQuery AI Team", email = "contact@docuquery-ai.com"}
]
maintainers = [
    {name = "DocuQuery AI Team", email = "contact@docuquery-ai.com"}
]
keywords = [
    "ai", "llm", "rag", "document-processing", "nlp", "vector-search", 
    "langchain", "google-vertex-ai", "pdf-parser", "machine-learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "fastapi>=0.100.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-google-vertexai>=0.1.0",
    "langchain-text-splitters>=0.0.1",
    "google-cloud-aiplatform>=1.38.0",
    "faiss-cpu>=1.7.4",
    "pandas>=1.5.0",
    "xlrd>=2.0.1",
    "openpyxl>=3.1.0",
    "python-docx>=0.8.11",
    "python-pptx>=0.6.21",
    "pypdf>=3.15.0",
    "markdown>=3.4.0",
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
    "numpy>=1.24.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "bcrypt>=4.0.0",
    "email-validator>=2.0.0",
    "sqlalchemy>=2.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black==23.12.1",
    "isort==5.12.0",
    "flake8>=6.0.0",
    "mypy==1.6.1",
    "pre-commit>=3.0.0",
    "types-requests>=2.31.0.20240417",
    "types-Markdown>=3.5.0.20240215",
]
web = [
    "uvicorn[standard]>=0.23.0",
    "gunicorn>=21.0.0",
    "python-multipart>=0.0.6",
]
gpu = [
    "faiss-gpu>=1.7.4",
]

[project.urls]
Homepage = "https://github.com/saichowdary007/docu-query"
Documentation = "https://github.com/saichowdary007/docu-query/blob/main/README.md"
Repository = "https://github.com/saichowdary007/docu-query.git"
Issues = "https://github.com/saichowdary007/docu-query/issues"
Changelog = "https://github.com/saichowdary007/docu-query/blob/main/CHANGELOG.md"

[project.scripts]
docuquery = "docuquery_ai.cli.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["docuquery_ai"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
allow_untyped_defs = true
allow_untyped_calls = true
no_implicit_optional = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=docuquery_ai --cov-report=term-missing --cov-report=html" 
